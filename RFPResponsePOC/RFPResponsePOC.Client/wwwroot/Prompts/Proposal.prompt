Please parse the contents of this Request For Proposal (RFP):

### RFP CONTENTS START
{{OCRResult}}
### RFP CONTENTS STOP

Into the following JSON format, which matches the expected structure for a venue room request.

### JSON FORMAT START
[
  {
    "name": "Main Ballroom",
    "start_date": "2025-09-10",
    "start_time": "18:00:00",
    "end_date": "2025-09-10",
    "end_time": "22:00:00",
    "room_type": "Banquet",
    "attendance": 150,
    "notes": "Setup should include round tables for dinner and a stage for presentations."
  },
  {
    "name": "Conference Room A",
    "start_date": "2025-09-11",
    "start_time": "09:00:00",
    "end_date": "2025-09-11",
    "end_time": "12:00:00",
    "room_type": "Conference",
    "attendance": 30,
    "notes": "Require projector and whiteboard. Light refreshments served."
  }
]
### JSON FORMAT STOP

#1 First determine the number of days in the conference or event. Each day will have its own set of rooms and times.
#2 For each day, create a room entry for each activity or session specified in the RFP.
#3 Each room entry should include:
- `name`: A descriptive name for the room or session.
- `start_date`: The date the session starts (leave empty if not specified).
- `start_time`: The time the session starts (in HH:MM:SS format).
- `end_date`: The date the session ends (leave empty if not specified).
- `end_time`: The time the session ends (in HH:MM:SS format).
- `room_type`: The type of room (e.g., "Conference", "Banquet").
- `attendance`: The expected number of attendees for the session.
- `notes`: Additional notes about the session, including any special requirements or setup.
#4 If the RFP specifies multiple tracks or sessions, create separate entries for each track/session.
#5 Ensure that the JSON output is well-structured and valid, with all required fields filled in appropriately.
#6 If the RFP mentions breaks or meals, create separate entries for those as well, specifying the type of room and expected attendance.
#7 If the RFP does not specify a date, leave the `start_date` and `end_date` fields empty.
#8 If the RFP specifies a theatre style setup, include that in the `notes` field.
#9 Make the room_type the closest value to one of the following: "Banquet", "Conference", "Theatre", "Classroom", "U-Shape", "Boardroom", "Hollow Square", "Crescent Rounds", or "Reception". 

For example, if ### RFP CONTENTS contains:

3 day conference for elevator engineers. Please have 2 tracks for 1 1/2 hour sessions from 8:00am to 5:00pm with 15 breaks and a 1 hour lunch for 300 attendees. The session rooms are theatre style with max 150 people.

The expected JSON output would be:
```json
[
 {
    "name": "Session Room Track 1 - Day 1",
    "start_date": "",
    "start_time": "08:00:00",
    "end_date": "",
    "end_time": "17:00:00",
    "room_type": "Theatre",
    "attendance": 150,
    "notes": "3-day elevator engineering conference; 1.5h sessions in Track 1, theatre style seating, 15 breaks, 1h lunch"
  },
  {
    "name": "Session Room Track 2 - Day 1",
    "start_date": "",
    "start_time": "08:00:00",
    "end_date": "",
    "end_time": "17:00:00",
    "room_type": "Theatre",
    "attendance": 150,
    "notes": "3-day elevator engineering conference; 1.5h sessions in Track 2, theatre style seating, 15 breaks, 1h lunch"
  },
  {
    "name": "Lunch - Day 1",
    "start_date": "",
    "start_time": "12:00:00",
    "end_date": "",
    "end_time": "13:00:00",
    "room_type": "Banquet",
    "attendance": 300,
    "notes": "3-day elevator engineering conference; Banquet style seating, 1h lunch"
  },
  {
    "name": "Session Room Track 1 - Day 2",
    "start_date": "",
    "start_time": "08:00:00",
    "end_date": "",
    "end_time": "17:00:00",
    "room_type": "Theatre",
    "attendance": 150,
    "notes": "3-day elevator engineering conference; 1.5h sessions in Track 1, theatre style seating, 15 breaks, 1h lunch"
  },
  {
    "name": "Session Room Track 2 - Day 2",
    "start_date": "",
    "start_time": "08:00:00",
    "end_date": "",
    "end_time": "17:00:00",
    "room_type": "Theatre",
    "attendance": 150,
    "notes": "3-day elevator engineering conference; 1.5h sessions in Track 2, theatre style seating, 15 breaks, 1h lunch"
  },
  {
    "name": "Lunch - Day 2",
    "start_date": "",
    "start_time": "12:00:00",
    "end_date": "",
    "end_time": "13:00:00",
    "room_type": "Banquet",
    "attendance": 300,
    "notes": "3-day elevator engineering conference; Banquet style seating, 1h lunch"
  },
  {
    "name": "Session Room Track 1 - Day 3",
    "start_date": "",
    "start_time": "08:00:00",
    "end_date": "",
    "end_time": "17:00:00",
    "room_type": "Theatre",
    "attendance": 150,
    "notes": "3-day elevator engineering conference; 1.5h sessions in Track 1, theatre style seating, 15 breaks, 1h lunch"
  },
  {
    "name": "Session Room Track 2 - Day 3",
    "start_date": "",
    "start_time": "08:00:00",
    "end_date": "",
    "end_time": "17:00:00",
    "room_type": "Theatre",
    "attendance": 150,
    "notes": "3-day elevator engineering conference; 1.5h sessions in Track 2, theatre style seating, 15 breaks, 1h lunch"
  },
  {
    "name": "Lunch - Day 3",
    "start_date": "",
    "start_time": "12:00:00",
    "end_date": "",
    "end_time": "13:00:00",
    "room_type": "Banquet",
    "attendance": 300,
    "notes": "3-day elevator engineering conference; Banquet style seating, 1h lunch"
  }
]
```json
````````

This is the description of what the code block changes:
Improve the prompt to produce more reliable JSON output by adding explicit formatting requirements, validation rules, and fixing syntax issues

This is the code block that represents the suggested code change:

````````
You are a JSON data extraction specialist. Your task is to parse RFP content and return ONLY valid JSON.

CRITICAL: Your response must contain ONLY valid JSON. No explanations, no text before or after, no markdown formatting.

### RFP CONTENTS START
{{OCRResult}}
### RFP CONTENTS STOP

EXTRACT the venue room requirements into a JSON array using this exact structure:

REQUIRED JSON SCHEMA:
[
  {
    "name": "string (required, descriptive room/session name)",
    "start_date": "string (YYYY-MM-DD format or empty string "")",
    "start_time": "string (required, HH:MM:SS format)",
    "end_date": "string (YYYY-MM-DD format or empty string "")",
    "end_time": "string (required, HH:MM:SS format)",
    "room_type": "string (required, must be one of: Banquet, Conference, Theatre, Classroom, U-Shape, Boardroom, Hollow Square, Crescent Rounds, Reception)",
    "attendance": "number (required, integer > 0)",
    "notes": "string (required, can be empty string "")"
  }
]

PARSING RULES:
1. Identify total event duration (days/hours)
2. Create separate entries for each distinct session/activity/meal
3. For multi-day events, create entries for each day
4. For multi-track events, create entries for each track per day
5. Include meals/breaks as separate entries if mentioned
6. If dates not specified, use empty strings ("") for start_date and end_date
7. Times must be in 24-hour HH:MM:SS format (e.g., "08:00:00", "17:30:00")
8. Attendance must be a positive integer
9. Choose the closest room_type from the allowed list
10. All string fields must be properly escaped for JSON

VALIDATION REQUIREMENTS:
- Output must be valid JSON array
- All required fields must be present
- No null values allowed
- room_type must match exactly one of the predefined options
- Times must follow HH:MM:SS format
- Dates must follow YYYY-MM-DD format or be empty strings
- attendance must be positive integer

EXAMPLE INPUT: "3 day conference for elevator engineers. 2 tracks for 1.5 hour sessions from 8:00am to 5:00pm with breaks and 1 hour lunch for 300 attendees. Theatre style seating, max 150 per room."

EXAMPLE OUTPUT:
[
  {
    "name": "Session Track 1 - Day 1",
    "start_date": "",
    "start_time": "08:00:00",
    "end_date": "",
    "end_time": "17:00:00",
    "room_type": "Theatre",
    "attendance": 150,
    "notes": "Track 1 sessions with theatre style seating, includes breaks"
  },
  {
    "name": "Session Track 2 - Day 1",
    "start_date": "",
    "start_time": "08:00:00",
    "end_date": "",
    "end_time": "17:00:00",
    "room_type": "Theatre",
    "attendance": 150,
    "notes": "Track 2 sessions with theatre style seating, includes breaks"
  },
  {
    "name": "Lunch - Day 1",
    "start_date": "",
    "start_time": "12:00:00",
    "end_date": "",
    "end_time": "13:00:00",
    "room_type": "Banquet",
    "attendance": 300,
    "notes": "Lunch for all attendees"
  },
  {
    "name": "Session Track 1 - Day 2",
    "start_date": "",
    "start_time": "08:00:00",
    "end_date": "",
    "end_time": "17:00:00",
    "room_type": "Theatre",
    "attendance": 150,
    "notes": "Track 1 sessions with theatre style seating, includes breaks"
  },
  {
    "name": "Session Track 2 - Day 2",
    "start_date": "",
    "start_time": "08:00:00",
    "end_date": "",
    "end_time": "17:00:00",
    "room_type": "Theatre",
    "attendance": 150,
    "notes": "Track 2 sessions with theatre style seating, includes breaks"
  },
  {
    "name": "Lunch - Day 2",
    "start_date": "",
    "start_time": "12:00:00",
    "end_date": "",
    "end_time": "13:00:00",
    "room_type": "Banquet",
    "attendance": 300,
    "notes": "Lunch for all attendees"
  },
  {
    "name": "Session Track 1 - Day 3",
    "start_date": "",
    "start_time": "08:00:00",
    "end_date": "",
    "end_time": "17:00:00",
    "room_type": "Theatre",
    "attendance": 150,
    "notes": "Track 1 sessions with theatre style seating, includes breaks"
  },
  {
    "name": "Session Track 2 - Day 3",
    "start_date": "",
    "start_time": "08:00:00",
    "end_date": "",
    "end_time": "17:00:00",
    "room_type": "Theatre",
    "attendance": 150,
    "notes": "Track 2 sessions with theatre style seating, includes breaks"
  },
  {
    "name": "Lunch - Day 3",
    "start_date": "",
    "start_time": "12:00:00",
    "end_date": "",
    "end_time": "13:00:00",
    "room_type": "Banquet",
    "attendance": 300,
    "notes": "Lunch for all attendees"
  }
]

REMEMBER: Return ONLY the JSON array. No additional text or formatting.
````````


# Response