@using System.Net.Http
@using RFPResponsePOC.Client.Services
@inject HttpClient Http
@inject DialogService DialogService
@inject NotificationService NotificationService
@inject Blazored.LocalStorage.ILocalStorageService localStorage
@inject RFPResponsePOC.Model.SettingsService _SettingsService
@inject RFPResponsePOC.Model.LogService LogService
@inject IJSRuntime JsRuntime

<RadzenTextArea @bind-Value="templateContent" Rows="20" Style="width:100%; min-height:400px;" />
<div style="margin-top:10px;">
    <RadzenButton Text="Save" Style="background-color: green;" ButtonStyle="ButtonStyle.Primary" Click="SaveTemplate" />
    <RadzenButton Text="Cancel" Style="margin-left:10px;" ButtonStyle="ButtonStyle.Light" Click="Cancel" />
</div>

@code {
    string BasePath = "/RFPResponsePOC";
    string templateContent;
    string TemplateFile => $"{BasePath}/Template.txt";
    string DefaultTemplateUrl => "Templates/DefaultTemplate.txt";
    RFPResponsePOC.Client.Services.ZipService objZipService = new RFPResponsePOC.Client.Services.ZipService();

    protected override async Task OnInitializedAsync()
    {
        objZipService = new RFPResponsePOC.Client.Services.ZipService(JsRuntime, localStorage, _SettingsService, LogService);
        await objZipService.UnzipFile();

        if (File.Exists(TemplateFile))
        {
            templateContent = await File.ReadAllTextAsync(TemplateFile);
        }
        else
        {
            try
            {
                templateContent = await Http.GetStringAsync(DefaultTemplateUrl);
            }
            catch
            {
                templateContent = string.Empty;
            }
        }
    }

    private async Task SaveTemplate()
    {
        await File.WriteAllTextAsync(TemplateFile, templateContent);
        NotificationService.Notify(new NotificationMessage
        {
            Severity = NotificationSeverity.Success,
            Summary = "Saved",
            Detail = "Template updated",
            Duration = 4000
        });
        DialogService.Close(true);
    }

    private void Cancel()
    {
        DialogService.Close(false);
    }
}
